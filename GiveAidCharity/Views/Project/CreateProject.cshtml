@using GiveAidCharity.Models.Main
@model GiveAidCharity.Models.HelperClass.ProjectCreateViewModel

@{
    ViewBag.Title = "CreateProject";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var listCategories = ViewBag.categoryList as List<Category>;
}

<div class="row">
    <div class="col-md-8 mx-auto grid-margin stretch-card">
        <div class="card">
            <div class="card-body">

                <h4 class="card-title">Category</h4>
                <p class="card-description">Create New</p>
                @using (Html.BeginForm("CreateProject", "Project", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description)
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ReceiverEmail)
                        @Html.EditorFor(model => model.ReceiverEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReceiverEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContentPart1)
                        @Html.EditorFor(model => model.ContentPart1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContentPart1, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContentPart2)
                        @Html.EditorFor(model => model.ContentPart2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContentPart2, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Goal)
                        @Html.EditorFor(model => model.Goal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Goal, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CoverImg)
                        <br />
                        <img id="preview" src="https://via.placeholder.com/192x108.png/fff/9d3aff?text=1920x1080" class="hidden img-thumbnail" style="width: 100px" alt="Alternate Text" />
                        @Html.EditorFor(model => model.CoverImg, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @id = "valueImg-0" } })
                        @Html.ValidationMessageFor(model => model.CoverImg, "", new { @class = "text-danger" })
                        <div style="margin-top: 5px">
                            <button type="button" id="upload_widget" class="btn btn-primary" onclick="uploadImage(0)">Upload files</button>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ListImg)
                        <br />
                        <div id="previewList">
                            <img src="https://via.placeholder.com/192x108.png/fff/9d3aff?text=1920x1080" class="hidden img-thumbnail" style="width: 100px" alt="Alternate Text" />
                        </div>
                        @Html.EditorFor(model => model.ListImg, new { htmlAttributes = new { @class = "form-control", @type = "hidden", @id = "valueImgList" } })
                        @Html.ValidationMessageFor(model => model.ListImg, "", new { @class = "text-danger" })
                        <div style="margin-top: 5px">
                            <button type="button" id="upload_widget_list" class="btn btn-primary" onclick="uploadImage(0)">Upload files</button>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CategoryId)
                            <select name="CategoryId" id="CategoryId" class="form-control">
                                @foreach (var item in listCategories)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartDate)
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpireDate)
                        @Html.EditorFor(model => model.ExpireDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.ExpireDate, "", new { @class = "text-danger" })
                    </div>
                    <input type="submit" class="btn btn-gradient-primary mr-2" value="Tạo danh mục mới" />
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script type="text/javascript">
        var myWidget = cloudinary.createUploadWidget({
                cloudName: 'leduc911',
                uploadPreset: 'v686mun2'
            },
            (error, result) => {
                if (!error && result && result.event === "success") {
                    const imgLink = result.info.secure_url;
                    document.querySelector("input[name='CoverImg']").value = imgLink;
                    const imgPreview = document.getElementById("preview");
                    imgPreview.src = imgLink;
                    imgPreview.classList.remove("hidden");
                }
            }
        );

        document.getElementById("upload_widget").addEventListener("click",
            function() {
                myWidget.open();
            },
            false);

        //////////////////////////////////////////////
        var myWidgetArray = cloudinary.createUploadWidget({
                cloudName: 'leduc911',
                uploadPreset: 'v686mun2'
            },
            (error, result) => {
                if (!error && result && result.event === "success") {
                    const imgLink = result.info.secure_url;
                    document.querySelector("input[name='ListImg']").value += imgLink;
                    var textHtml =
                        `<img src="${imgLink}" class="hidden img-thumbnail" style="width: 100px" alt="Alternate Text" />`;
                    $('#previewList').append(textHtml);
                    const imgPreview = document.getElementById("previewList");
                    imgPreview.src = imgLink;
                    imgPreview.classList.remove("hidden");
                }
            }
        );

        document.getElementById("upload_widget_list").addEventListener("click",
            function () {
                $('#previewList').html('');
                myWidgetArray.open();
            },
            false);
    </script>
}
