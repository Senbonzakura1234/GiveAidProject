@using GiveAidCharity.Models.Main
@model GiveAidCharity.Models.HelperClass.EditProjectViewModel

@{
    ViewBag.Title = "EditProject";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    var listCategories = ViewBag.listCategories as List<Category>;
}

<div class="row">
    <div class="col-md-8 mx-auto grid-margin stretch-card">
        <div class="card">
            <div class="card-body">

                <h4 class="card-title">Blog</h4>
                <p class="card-description">Create New</p>
                @using (Html.BeginForm("EditProject", "Project", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContentPart1)
                        @Html.EditorFor(model => model.ContentPart1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContentPart1, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContentPart2)
                        @Html.EditorFor(model => model.ContentPart2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContentPart2, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId)
                        <select name="CategoryId" id="CategoryId" class="form-control">
                            @if (listCategories != null)
                            {
                                foreach (var item in listCategories)
                                {
                                    if (Model.CategoryId == item.Id)
                                    {
                                        <option value="@item.Id" selected="">@item.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            }
                        </select>
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                    <input type="submit" class="btn btn-gradient-primary mr-2" value="Update" />
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
