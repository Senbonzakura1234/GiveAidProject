@model GiveAidCharity.Models.EditProfileViewModel

@{
    ViewBag.Title = "CompleteUserProfile";
    Layout = "~/Views/Shared/_AuthenLayout.cshtml";
}

@section wrapClass {wrap-profile}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @*<span class="login100-form-title p-b-30">
        <span>
            <img src="https://res.cloudinary.com/senbonzakura/image/upload/v1581598494/Give%20Aid%20Project/LogoDark_tgnbjg.png" alt="" style="max-height: 65px" />
        </span>
        Register
    </span>*@

    <div class="form-row">
        <div class="col-md-6 form-group">
            @Html.EditorFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control", type = "hidden" } })
            @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
            <div class="mx-auto ml-md-0 mr-md-auto" style="max-width: 280px">
                <button type="button" class="upload-image-btn" id="upload_widget" style="overflow: hidden; width: 100%">
                    <img id="preview" src="@(Model.Avatar ?? "https://res.cloudinary.com/senbonzakura/image/upload/v1571307597/UserDefault_dchh43.png")"
                         class="img-thumbnail" alt="Alternate Text" style="border-radius: 100%" />
                </button>
            </div>
            <small>@Html.ValidationMessageFor(m => m.Avatar, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <span class="login100-form-title mb-3 mt-2">
                Just one more step
            </span>
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.FirstName, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.FirstName, new { @class = "input100", placeholder = "Type your FirstName" })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger text-right" })</small>
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.LastName, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.LastName, new { @class = "input100", placeholder = "Type your LastName" })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.Address, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.Address, new { @class = "input100", placeholder = "Type your Address" })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.Birthday, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.Birthday, new { @class = "input100", type = "date" })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.Birthday, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.CompanyName, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.CompanyName, new { @class = "input100", placeholder = "Type your CompanyName" })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.CompanyName, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.Description, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.Description, new { @class = "input100", placeholder = "Type your Description"  })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.Zipcode, new { @class = "control-label mb-0" })
                @Html.TextBoxFor(m => m.Zipcode, new { @class = "input100", placeholder = "Type your Zipcode"  })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.Zipcode, "", new { @class = "text-danger text-right" })</small>
        </div>
        <div class="col-md-6 form-group">
            <div class="wrap-input100 validate-input mb-3" data-validate="">
                @Html.LabelFor(m => m.Gender, new { @class = "control-label mb-0" })
                @Html.EnumDropDownListFor(m => m.Gender, new { @class = "input100 border-0" })
                <span class="focus-input100" data-symbol="&#xf1f7;"></span>
            </div>
            <small>@Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger text-right" })</small>
        </div>
    </div>


    <div class="container-login100-form-btn p-t-31">
        <div class="wrap-login100-form-btn">
            <div class="login100-form-bgbtn"></div>
            <button type="submit" class="login100-form-btn">
                Save
            </button>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://widget.cloudinary.com/v2.0/global/all.js" type="text/javascript"></script>
    <script type="text/javascript">
        var myWidget = cloudinary.createUploadWidget({
                cloudName: 'leduc911',
                uploadPreset: 'v686mun2'
            },
            (error, result) => {
                if (!error && result && result.event === "success") {
                    const imgLink = result.info.secure_url;
                    document.querySelector("input[name='Avatar']").value = imgLink;
                    const imgPreview = document.getElementById("preview");
                    imgPreview.src = imgLink;
                    imgPreview.classList.remove("hidden");
                }
            }
        );

        document.getElementById("upload_widget").addEventListener("click",
            function() {
                myWidget.open();
            },
            false);
        $(function() {
            const avatarPreviewWidth = $(".upload-image-btn").outerWidth();
            $(".upload-image-btn").css({'height':(avatarPreviewWidth - 10)+'px'});
            $("#preview").css({'height':(avatarPreviewWidth - 10)+'px'});
        });
    </script>
}

<style>
    .unstyled::-webkit-inner-spin-button,
    .unstyled::-webkit-calendar-picker-indicator {
        display: none;
        -webkit-appearance: none;
    }
    select {
        outline: none;
    }
</style>