@using System.Globalization
@using GiveAidCharity.Models.Main
@model IEnumerable<GiveAidCharity.Models.Main.Donation>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";

    ViewBag.Title = "List";

    var status = ((int?)ViewBag.status).Value;
    var method = ((int?)ViewBag.method).Value;
    var totalPage = ((int?)ViewBag.TotalPage).Value;
    var currentPage = ((int?)ViewBag.CurrentPage).Value;
    var limit = ((int?)ViewBag.Limit).Value;
    var start = ViewBag.Start.ToString();
    var end = ViewBag.End.ToString();
    var nameProject = ViewBag.nameProject.ToString();
    var minAmount = ((double?) ViewBag.minAmount).Value;
    var maxAmount = ((double?) ViewBag.maxAmount).Value;
    var currentPara = "?start=" + ViewBag.Start + "&end=" + ViewBag.End + "&nameProject=" + nameProject + "&minAmount=" + ViewBag.minAmount +
                      "&maxAmount=" + ViewBag.maxAmount;
}
@section styles
{
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @Styles.Render("~/Content/DashboardTheme/css/paginate.css")
    @Styles.Render("~/Content/DashboardTheme/css/slider-range.css")
}
<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body table-responsive">
                <h4 class="card-title">Date filer</h4>
                <p class="card-description"> Basic form layout </p>
                @using (Html.BeginForm("Index", "Donations", FormMethod.Get, new { id = "productForm" }))
                {
                    <input type="hidden" id="startTime" name="start" value="@start" />
                    <input type="hidden" id="endTime" name="end" value="@end" />

                    @Html.Hidden("status", status, new { id = "status" })
                    @Html.Hidden("method", method, new { id = "method" })
                    <div class="form-row">
                        <div class="col-md-12 form-group">
                            <label for="nameProject">Search by project name</label>
                            <input type="text" id="nameProject" name="nameProject" value="@nameProject"
                                   class="form-control" />
                        </div>
                    </div>

                    <div class="form-row mb-4">
                        <a class="btn btn-gradient-primary" data-toggle="collapse" href="#searchCollapseAdvance" role="button" aria-expanded="false"
                           aria-controls="multiCollapseExample1">Advanced Search</a>
                        <a href="@Url.Action("Index", "Donations")" class="btn btn-light ml-auto">Clear Filter</a>
                        <button type="submit" class="btn btn-gradient-primary ml-2">Submit</button>
                    </div>
                    <div class="form-row collapse" id="searchCollapseAdvance">
                        <div class="col-md-6 form-group">
                            <label for="dateFilter">Date range picker</label>
                            <input type="text" id="dateFilter" value=""
                                   class="form-control" />
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.Label("", "Amount Range")
                            <div class="px-3 mt-3">
                                <div id="slider-range">

                                </div>
                            </div>
                            <div class="px-3 mt-1">
                                <div id="amount" class="text-primary"></div>
                            </div>
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.Label("statusSelect", "Status")
                            @Html.DropDownList("statusSelect",
                                EnumHelper.GetSelectList(typeof(Donation.DonationStatusEnum)),
                                "-- Status --",
                                new { @class = "form-control", id = "statusSelect" })
                        </div>
                        <div class="col-md-6 form-group">
                            @Html.Label("methodSelect", "Payment Method")
                            @Html.DropDownList("methodSelect",
                                EnumHelper.GetSelectList(typeof(Donation.PaymentMethodEnum)),
                                "-- Payment Method --",
                                new { @class = "form-control", id = "methodSelect" })
                        </div>
                        @Html.Hidden("minAmount", minAmount, new { id = "minAmount" })
                        @Html.Hidden("maxAmount", maxAmount, new { id = "maxAmount" })
                    </div>
                }

            </div>
        </div>
    </div>
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body table-responsive">
                <h4 class="card-title">List Donation</h4>
                <p class="card-description d-sm-flex">
                    <span class="text-muted text-small my-auto">
                        Showing @((currentPage - 1) * limit + 1) – @((currentPage - 1) * limit + Model.Count()) of @ViewBag.TotalItem results
                    </span>
                </p>
                <table class="table" id="update-student">
                    <thead class="text-primary">
                        <tr>
                            <th class="text-center">
                                View
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.ApplicationUser.UserName)
                            </th>
                            <th class="text-center">
                                Project
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.Amount)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.PaymentMethod)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.Status)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(model => model.CreatedAt)
                            </th>
                            <th class="text-center d-none d-lg-table-cell">
                                Modify
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {

                            <tr>
                                <td class="text-center">
                                    <a class="badge badge-gradient-info" href="#">
                                        <span class="mdi mdi-search-web"></span>
                                    </a>
                                </td>
                                <td>
                                    <a href="#" class="badge w-100 badge-gradient-primary w-100">
                                        @item.ApplicationUser.UserName
                                    </a>
                                </td>
                                <td>
                                    <a href="#" class="badge w-100 badge-gradient-primary w-100">
                                        @item.Project.Name
                                    </a>
                                </td>
                                <td class="text-center">
                                    <b class="text-small">$@Html.DisplayFor(modelItem => item.Amount)</b>
                                </td>
                                <td class="d-none d-xl-table-cell ">
                                    <a class="badge text-white w-100
                                       @(item.PaymentMethod == Donation.PaymentMethodEnum.Paypal ? "badge-gradient-primary"
                                           : item.PaymentMethod == Donation.PaymentMethodEnum.VnPay ? "badge-gradient-warning"
                                               : "badge-secondary")">
                                        @Html.DisplayFor(modelItem => item.PaymentMethod)
                                    </a>
                                </td>
                                <td class="d-none d-xl-table-cell ">
                                    <a class="badge text-white w-100
                                       @(item.Status == Donation.DonationStatusEnum.Success ? "badge-gradient-primary"
                                           : item.Status == Donation.DonationStatusEnum.Pending ? "badge-gradient-warning"
                                               : "badge-secondary")">
                                        @Html.DisplayFor(modelItem => item.Status)
                                    </a>
                                </td>
                                <td class="text-center">
                                    <b class="text-small">@Html.DisplayFor(modelItem => item.CreatedAt)</b>
                                </td>
                                <td class="text-center d-none d-lg-table-cell">
                                    <a class="badge badge-warning" href="#">
                                        <span class="mdi mdi-pencil-box-outline"></span>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
            <div class="card-footer bg-white border-0">
                @if (totalPage > 0)
                {
                    <div>
                        <ul class="pagination text-center">
                            <li class="page-item ml-auto" style="opacity: 0"></li>

                            @if (currentPage > 3)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(1)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-double-left"></i>
                                    </a>
                                </li>
                            }

                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage - 1)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-left"></i>
                                    </a>
                                </li>
                            }

                            @if (currentPage > 2)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage - 2)&limit=@(limit)">
                                        @(currentPage - 2)
                                    </a>
                                </li>
                            }

                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage - 1)&limit=@(limit)">
                                        @(currentPage - 1)
                                    </a>
                                </li>
                            }

                            <li class="active page-item" aria-current="page">
                                <a class="page-link" href="@currentPara&page=@(currentPage)&limit=@(limit)">
                                    @currentPage
                                </a>
                            </li>

                            @if (totalPage - currentPage > 0)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage + 1)&limit=@(limit)">
                                        @(currentPage + 1)
                                    </a>
                                </li>
                            }

                            @if (totalPage - currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage + 2)&limit=@(limit)">
                                        @(currentPage + 2)
                                    </a>
                                </li>
                            }

                            @if (currentPage < totalPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(currentPage + 1)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-right"></i>
                                    </a>
                                </li>
                            }

                            @if (currentPage < totalPage - 2)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@currentPara&page=@(totalPage)&limit=@(limit)">
                                        <i class="mdi mdi-chevron-double-right"></i>
                                    </a>
                                </li>
                            }

                            <li class="page-item mr-auto" style="opacity: 0"></li>
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            const dataStatus = $("#status").val();
            const methodStatus = $("#method").val();
            $("#statusSelect").val(dataStatus);
            $("#methodSelect").val(methodStatus);

            $("#statusSelect").on('change', function () {
                const data = $(this).val();
                $("#status").val(data);
                console.log($("#status").val());
            });
            $("#methodSelect").on('change', function () {
                const data = $(this).val();
                $("#method").val(data);
                console.log($("#method").val());
            });


            const minAmount = $("#minAmount").val();
            const maxAmount = $("#maxAmount").val();
            $("#slider-range").slider({
                range: true,
                min: 0,
                max: 100,
                values: [minAmount, maxAmount],
                slide: function (event, ui) {
                    $("#amount").html(`$${ui.values[0]} - $${ui.values[1]}`);
                    $("#minAmount").val(ui.values[0]);
                    $("#maxAmount").val(ui.values[1]);
                }
            });
            $("#amount").html(`$${$("#slider-range").slider("values", 0)} - $${$("#slider-range").slider("values", 1)}`);

            $("#nameProject").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Api/AjaxFindByProjectName",
                        type: "POST",
                        dataType: "json",
                        data: { nameProject: request.term },
                        success: function (data) {
                            console.log(request);
                            console.log(response);
                            console.log(data);
                            response($.map(data,
                                function (item) {
                                    return { label: item, value: item };
                                }));
                        }
                    });
                }
            });
        });

        $(function () {
            // init start time and end time;
            var startDate = new Date();
            startDate.setFullYear(startDate.getFullYear() - 1);
            var endDate = new Date();

            // check start and end parameter
            const startPara = $("#startTime").val();
            if (startPara != null && startPara !== "") {
                startDate = new Date(startPara);
            }

            const endPara = $("#endTime").val();
            if (endPara != null && endPara !== "") {
                endDate = new Date(endPara);
            }

            $("#dateFilter").daterangepicker({
                autoUpdateInput: true,
                startDate: startDate,
                endDate: endDate,
                locale: {
                    cancelLabel: 'Clear'
                }
            });

            $("#dateFilter").on('apply.daterangepicker', function (ev, picker) {
                const start = picker.startDate.format('YYYY-MM-DD');
                const end = picker.endDate.format('YYYY-MM-DD');
                $("#startTime").val(start);
                $("#endTime").val(end);
                console.log(start + " " + end);
                console.log(startPara + " " + endPara);
            });

        });
    </script>
}

